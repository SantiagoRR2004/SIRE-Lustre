type sensorTemp = struct{id: int; temperatura: real};
type array_sensores=sensorTemp^3;
function sensor(i: int; temp: real) returns (out: sensorTemp);
    let
        out.id=i;
        out.temperatura=temp;
    tel;
function inicializar() returns (array: array_sensores);
    let
        array = [
            sensor(1, 25.0),
            sensor(2, 30.5),
            sensor(3, 28.3)
        ];
    tel;
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
function temperatura_media1(array: array_sensores) returns (media: real);
    var
        suma: real;
    let
        suma = array[0].temperatura + array[1].temperatura +
            array[2].temperatura;
        media = suma / 3.0;
    tel;
function extraer_temperatura(sensor: sensorTemp) returns (temp: real);
    let
        temp = sensor.temperatura;
    tel;
function temperatura_media2(array: array_sensores) returns (media: real);
    var
        suma: real;
        a: real^3;
    let
        -- Extrae las temperaturas del array de sensores
        a = map<<extraer_temperatura,3>>(array);
        suma = red<<+,3>>(0.0, a);
        media = suma / 3.0;
    tel;
function extraer_temperatura2(acc: real; sensor: sensorTemp) returns (accR: real);
    let
        accR = acc + sensor.temperatura;
    tel;
function temperatura_media3(array: array_sensores) returns (media: real);
    var
        suma: real;
    let
        suma = red<<extraer_temperatura2,3>>(
            0.0, 
            array);
        media = suma / 3.0;
    tel;
function extraer_temperatura3(acc: real; sensor: sensorTemp) returns (accR: real; sensorOut: sensorTemp);
    let
        accR = acc + sensor.temperatura;
        sensorOut = sensor;
    tel;
function temperatura_media4(array: array_sensores) returns (media: real);
    var
        suma: real;
        array2: array_sensores;
    let
        (suma, array2) = fillred<<extraer_temperatura3,3>>(
            0.0, 
            array);
        media = suma / 3.0;
    tel;
node main() returns (media1, media2, media3, media4: real);
    var
        array: array_sensores;
    let
        array=inicializar();
        media1=temperatura_media1(array);
        media2=temperatura_media2(array);
        media3=temperatura_media3(array);
        media4=temperatura_media4(array);
    tel;
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
function filtro_temperatura28(s: sensorTemp) returns (b:bool);
    let
        b = s.temperatura > 28.0;
    tel;
node acumular_temp_filtrados(acumTemp: real; s: sensorTemp) returns (acc_temp: real; y:sensorTemp);
    let
        acc_temp = if filtro_temperatura28(s) then acumTemp + s.temperatura
            else acumTemp;
        y=s;
    tel;
node acumular_elem_filtrados(acumElem: real; s: sensorTemp) returns (acc_elem: real);
    let
        acc_elem = if filtro_temperatura28(s) then acumElem + 1.0
        else acumElem;
    tel;
node filtrar_sensores(array: array_sensores) returns (media:real; a_filtrado:array_sensores);
    var
        suma:real;
        num:real;
    let
        (suma, a_filtrado) = fillred<<acumular_temp_filtrados, 3>>(0.0, array);
        num = red<<acumular_elem_filtrados, 3>>(0.0, a_filtrado);
        media = suma / num;
    tel;
node main2() returns (val:real; array2:array_sensores);
    var
        array: array_sensores;
    let
        array=inicializar();
        (val,array2)=filtrar_sensores(array);
    tel;
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
node es_impar(s: sensorTemp) returns (s1:sensorTemp);
    var
        impar:bool;
    let
        impar = (s.id mod 2) <> 0;
        s1 = if impar then sensor(s.id,s.temperatura + 2.0) else s;
    tel;
node modificar_sensores_impares(array: array_sensores) returns (a_modif:array_sensores);
    let
        a_modif = map<<es_impar, 3>>(array);
    tel;
node main3() returns (array3:array_sensores);
    var
        array: array_sensores;
    let
        array=inicializar();
        array3=modificar_sensores_impares(array);
    tel;